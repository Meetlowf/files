import os
import pandas as pd
# import PyPDF2
import pdfkit

# file directory
files = os.listdir("docs/")
files.sort()

# create an HTML output file
f = open("result.html", "w")

test = f"<head> <link rel=\"stylesheet\" href=\"main.css\"></head>"
num = 0
listOfNames= []

# loop through all the files in the directory
for f1 in files:
    # print("filename: " + f1)

    if num > 0:
        listOfNames.append(f1)
    
    file = pd.read_csv("docs/" + f1)
    # drop empty cells
    file.dropna(how='all', axis=1, inplace=True)
    # drop all the columns that are not needed
    file.drop(['fulcrum_record_id', 'version', 'created_at', 'updated_at', 'created_by', 'updated_by'], axis=1, inplace=True, errors='ignore')
    file.drop(['system_created_at', 'system_updated_at', 'latitude', 'longitude', 'geometry'], axis=1, inplace=True, errors='ignore')
    file.drop(['state_project_number_example_s320', 'state_project_number_example_60'], axis=1, inplace=True, errors='ignore')
    file.drop(['state_project_number_example_10', 'state_project_number_example_16'], axis=1, inplace=True, errors='ignore')
    file.drop(['state_project_number_example_57', 'state_project_number_example_00'], axis=1, inplace=True, errors='ignore')
    file.drop(['federal_project_number_example_stp', 'federal_project_number_example_0060'], axis=1, inplace=True, errors='ignore')
    file.drop(['federal_project_number_example_311', 'federal_project_number_example_d'], axis=1, inplace=True, errors='ignore')
    file.drop(['file_size', 'uploaded_at', 'exif_date_time', 'exif_gps_altitude', 'exif_gps_dop'], axis=1, inplace=True, errors='ignore')
    file.drop(['exif_gps_img_direction', 'exif_gps_img_direction_ref', 'exif_gps_latitude'], axis=1, inplace=True, errors='ignore')
    file.drop(['exif_gps_latitude_ref', 'exif_gps_longitude', 'exif_gps_longitude_ref'], axis=1, inplace=True, errors='ignore')
    file.drop(['exif_make', 'exif_model', 'exif_pixel_x_dimension', 'exif_pixel_y_dimension', 'exif_software'], axis=1, inplace=True, errors='ignore')
    file.drop(['exif_x_resolution', 'exif_y_resolution'], axis=1, inplace=True, errors='ignore')
    # remove the last part of the column name after the last underscore
    result = f1.rsplit('_', 1)[1]
    result = result.rsplit('.', 1)[0]

    for column in file.columns:
        if column.find(result) != -1:
            firstHalf = column.rsplit('_', 1)[0]
            file.rename(columns={column: firstHalf}, inplace=True)
    # switch current words for abbreviation 
    for column in file.columns:
        tempCol = column
        file.rename(columns={tempCol: tempCol.replace("anchorconnection", "achcntn")}, inplace=True)
        tempCol = tempCol.replace("anchorconnection", "achcntn")
        file.rename(columns={tempCol: tempCol.replace("number", "num")}, inplace=True)
        tempCol = tempCol.replace("number", "num")
        file.rename(columns={tempCol: tempCol.replace("roadway", "rdwy")}, inplace=True)
        tempCol = tempCol.replace("roadway", "rdwy")
        file.rename(columns={tempCol: tempCol.replace("inspection", "inspctn")}, inplace=True)
        tempCol = tempCol.replace("inspection", "inspctn")
        file.rename(columns={tempCol: tempCol.replace("report", "rept")}, inplace=True)
        tempCol = tempCol.replace("report", "rept")
        file.rename(columns={tempCol: tempCol.replace("inventoried", "invtrd")}, inplace=True)
        tempCol = tempCol.replace("inventoried", "invtrd")
        file.rename(columns={tempCol: tempCol.replace("superstructure", "sstrt")}, inplace=True)
        tempCol = tempCol.replace("superstructure", "sstrt")
        file.rename(columns={tempCol: tempCol.replace("structure", "strt")}, inplace=True)
        tempCol = tempCol.replace("structure", "strt")
        file.rename(columns={tempCol: tempCol.replace("newly", "nwly")}, inplace=True)
        tempCol = tempCol.replace("newly", "nwly")
        file.rename(columns={tempCol: tempCol.replace("erected", "erctd")}, inplace=True)
        tempCol = tempCol.replace("erected", "erctd")
        file.rename(columns={tempCol: tempCol.replace("project", "prj")}, inplace=True)
        tempCol = tempCol.replace("project", "prj")
        file.rename(columns={tempCol: tempCol.replace("order", "odr")}, inplace=True)
        tempCol = tempCol.replace("order", "odr")
        file.rename(columns={tempCol: tempCol.replace("purchase", "prch")}, inplace=True)
        tempCol = tempCol.replace("purchase", "prch")
        file.rename(columns={tempCol: tempCol.replace("construction", "cnstrn")}, inplace=True)
        tempCol = tempCol.replace("construction", "cnstrn")
        file.rename(columns={tempCol: tempCol.replace("assembly", "asby")}, inplace=True)
        tempCol = tempCol.replace("assembly", "asby")
        file.rename(columns={tempCol: tempCol.replace("traffic", "trfc")}, inplace=True)
        tempCol = tempCol.replace("traffic", "trfc")
        file.rename(columns={tempCol: tempCol.replace("supervisor", "sprvr")}, inplace=True)
        tempCol = tempCol.replace("supervisor", "sprvr")
        file.rename(columns={tempCol: tempCol.replace("plan", "pln")}, inplace=True)
        tempCol = tempCol.replace("plan", "pln")
        file.rename(columns={tempCol: tempCol.replace("date", "dt")}, inplace=True)
        tempCol = tempCol.replace("date", "dt")
        file.rename(columns={tempCol: tempCol.replace("of", "o")}, inplace=True)
        tempCol = tempCol.replace("of", "o")
        file.rename(columns={tempCol: tempCol.replace("erection", "ectn")}, inplace=True)
        tempCol = tempCol.replace("erection", "ectn")
        file.rename(columns={tempCol: tempCol.replace("control", "ctrl")}, inplace=True)
        tempCol = tempCol.replace("control", "ctrl")
        file.rename(columns={tempCol: tempCol.replace("special", "spec")}, inplace=True)
        tempCol = tempCol.replace("special", "spec")
        file.rename(columns={tempCol: tempCol.replace("location", "locn")}, inplace=True)
        tempCol = tempCol.replace("location", "locn")
        file.rename(columns={tempCol: tempCol.replace("diagram", "dgm")}, inplace=True)
        tempCol = tempCol.replace("diagram", "dgm")
        file.rename(columns={tempCol: tempCol.replace("sketch", "skh")}, inplace=True)
        tempCol = tempCol.replace("sketch", "skh")
        file.rename(columns={tempCol: tempCol.replace("purpose", "purp")}, inplace=True)
        tempCol = tempCol.replace("purpose", "purp")
        file.rename(columns={tempCol: tempCol.replace("description", "dsctn")}, inplace=True)
        tempCol = tempCol.replace("description", "dsctn")
        file.rename(columns={tempCol: tempCol.replace("testing", "tstg")}, inplace=True)
        tempCol = tempCol.replace("testing", "tstg")
        file.rename(columns={tempCol: tempCol.replace("updtd", "upd")}, inplace=True)
        tempCol = tempCol.replace("updtd", "upd")
        file.rename(columns={tempCol: tempCol.replace("parent", "prnt")}, inplace=True)
        tempCol = tempCol.replace("parent", "prnt")
        file.rename(columns={tempCol: tempCol.replace("fulcrum", "flm")}, inplace=True)
        tempCol = tempCol.replace("fulcrum", "flm")
        file.rename(columns={tempCol: tempCol.replace("deficiency", "dfcy")}, inplace=True)
        tempCol = tempCol.replace("deficiency", "dfcy")
        file.rename(columns={tempCol: tempCol.replace("criteria", "crt")}, inplace=True)
        tempCol = tempCol.replace("criteria", "crt")
        file.rename(columns={tempCol: tempCol.replace("standard", "stnd")}, inplace=True)
        tempCol = tempCol.replace("standard", "stnd")
        file.rename(columns={tempCol: tempCol.replace("recommended", "rec")}, inplace=True)
        tempCol = tempCol.replace("recommended", "rec")
        file.rename(columns={tempCol: tempCol.replace("priority", "prty")}, inplace=True)
        tempCol = tempCol.replace("priority", "prty")
        file.rename(columns={tempCol: tempCol.replace("information", "info")}, inplace=True)
        tempCol = tempCol.replace("information", "info")
        # file.rename(columns={tempCol: tempCol.replace("non", "non")}, inplace=True)
        # tempCol = tempCol.replace("non", "non")
        file.rename(columns={tempCol: tempCol.replace("recommendation", "recn")}, inplace=True)
        tempCol = tempCol.replace("recommendation", "recn")
        file.rename(columns={tempCol: tempCol.replace("supplemental", "spmtl")}, inplace=True)
        tempCol = tempCol.replace("supplemental", "spmtl")
        file.rename(columns={tempCol: tempCol.replace("referenced", "refcd")}, inplace=True)
        tempCol = tempCol.replace("referenced", "refcd")
        file.rename(columns={tempCol: tempCol.replace("other", "otr")}, inplace=True)
        tempCol = tempCol.replace("other", "otr")
        # file.rename(columns={tempCol: tempCol.replace("requirements", "rqms")}, inplace=True)
        # tempCol = tempCol.replace("requirements", "rqms")
        file.rename(columns={tempCol: tempCol.replace("requirement", "rqm")}, inplace=True)
        tempCol = tempCol.replace("requirement", "rqm")
        file.rename(columns={tempCol: tempCol.replace("identification", "id")}, inplace=True)
        tempCol = tempCol.replace("identification", "id")
        file.rename(columns={tempCol: tempCol.replace("intersection", "intstn")}, inplace=True)
        tempCol = tempCol.replace("intersection", "intstn")
        file.rename(columns={tempCol: tempCol.replace("access", "acs")}, inplace=True)
        tempCol = tempCol.replace("access", "acs")
        file.rename(columns={tempCol: tempCol.replace("notes", "nts")}, inplace=True)
        tempCol = tempCol.replace("notes", "nts")
        file.rename(columns={tempCol: tempCol.replace("signalized", "sgnlz")}, inplace=True)
        tempCol = tempCol.replace("signalized", "sgnlz")
        file.rename(columns={tempCol: tempCol.replace("signal", "sgnl")}, inplace=True)
        tempCol = tempCol.replace("signal", "sgnl")
        file.rename(columns={tempCol: tempCol.replace("mounted", "mntd")}, inplace=True)
        tempCol = tempCol.replace("mounted", "mntd")
        file.rename(columns={tempCol: tempCol.replace("overhead", "ovhd")}, inplace=True)
        tempCol = tempCol.replace("overhead", "ovhd")
        file.rename(columns={tempCol: tempCol.replace("specific", "spfc")}, inplace=True)
        tempCol = tempCol.replace("specific", "spfc")
        file.rename(columns={tempCol: tempCol.replace("support", "supt")}, inplace=True)
        tempCol = tempCol.replace("support", "supt")
        file.rename(columns={tempCol: tempCol.replace("category", "cat")}, inplace=True)
        tempCol = tempCol.replace("category", "cat")
        # file.rename(columns={tempCol: tempCol.replace("or", "or")}, inplace=True)
        # tempCol = tempCol.replace("or", "or")
        # file.rename(columns={tempCol: tempCol.replace("leg", "leg")}, inplace=True)
        # tempCol = tempCol.replace("leg", "leg")
        file.rename(columns={tempCol: tempCol.replace("pole", "pl")}, inplace=True)
        tempCol = tempCol.replace("pole", "pl")
        file.rename(columns={tempCol: tempCol.replace("primary", "pri")}, inplace=True)
        tempCol = tempCol.replace("primary", "pri")
        file.rename(columns={tempCol: tempCol.replace("total", "ttl")}, inplace=True)
        tempCol = tempCol.replace("total", "ttl")
        file.rename(columns={tempCol: tempCol.replace("sign", "sgn")}, inplace=True)
        tempCol = tempCol.replace("sign", "sgn")
        file.rename(columns={tempCol: tempCol.replace("area", "a")}, inplace=True)
        tempCol = tempCol.replace("area", "a")
        file.rename(columns={tempCol: tempCol.replace("lighting", "ltng")}, inplace=True)
        tempCol = tempCol.replace("lighting", "ltng")
        file.rename(columns={tempCol: tempCol.replace("luminaire", "lumnr")}, inplace=True)
        tempCol = tempCol.replace("luminaire", "lumnr")
        # file.rename(columns={tempCol: tempCol.replace("luminaires", "lumnrs")}, inplace=True)
        # tempCol = tempCol.replace("luminaires", "lumnrs")
        file.rename(columns={tempCol: tempCol.replace("breakaway", "bkwy")}, inplace=True)
        tempCol = tempCol.replace("breakaway", "bkwy")
        file.rename(columns={tempCol: tempCol.replace("mechanism", "mech")}, inplace=True)
        tempCol = tempCol.replace("mechanism", "mech")
        file.rename(columns={tempCol: tempCol.replace("cabinet", "cbt")}, inplace=True)
        tempCol = tempCol.replace("cabinet", "cbt")
        file.rename(columns={tempCol: tempCol.replace("strain", "strn")}, inplace=True)
        tempCol = tempCol.replace("strain", "strn")
        file.rename(columns={tempCol: tempCol.replace("mast", "mst")}, inplace=True)
        tempCol = tempCol.replace("mast", "mst")
        # file.rename(columns={tempCol: tempCol.replace("arm", "arm")}, inplace=True)
        # tempCol = tempCol.replace("arm", "arm")
        file.rename(columns={tempCol: tempCol.replace("heads", "hds")}, inplace=True)
        tempCol = tempCol.replace("heads", "hds")
        file.rename(columns={tempCol: tempCol.replace("attachments", "atcmts")}, inplace=True)
        tempCol = tempCol.replace("attachments", "atcmts")
        # file.rename(columns={tempCol: tempCol.replace("ft", "ft")}, inplace=True)
        # tempCol = tempCol.replace("ft", "ft")
        file.rename(columns={tempCol: tempCol.replace("high", "hi")}, inplace=True)
        tempCol = tempCol.replace("high", "hi")
        file.rename(columns={tempCol: tempCol.replace("tower", "twr")}, inplace=True)
        tempCol = tempCol.replace("tower", "twr")
        file.rename(columns={tempCol: tempCol.replace("general", "gnrl")}, inplace=True)
        tempCol = tempCol.replace("general", "gnrl")
        file.rename(columns={tempCol: tempCol.replace("type", "t")}, inplace=True)
        tempCol = tempCol.replace("type", "t")
        file.rename(columns={tempCol: tempCol.replace("secondary", "sec")}, inplace=True)
        tempCol = tempCol.replace("secondary", "sec")
        file.rename(columns={tempCol: tempCol.replace("revised", "rvd")}, inplace=True)
        tempCol = tempCol.replace("revised", "rvd")
        file.rename(columns={tempCol: tempCol.replace("detail", "dtl")}, inplace=True)
        tempCol = tempCol.replace("revised", "dtl")
        file.rename(columns={tempCol: tempCol.replace("length", "len")}, inplace=True)
        tempCol = tempCol.replace("length", "len")
        file.rename(columns={tempCol: tempCol.replace("span", "spn")}, inplace=True)
        tempCol = tempCol.replace("span", "spn")
        file.rename(columns={tempCol: tempCol.replace("point", "pt")}, inplace=True)
        tempCol = tempCol.replace("point", "pt")
        file.rename(columns={tempCol: tempCol.replace("bolts", "bts")}, inplace=True)
        tempCol = tempCol.replace("bolts", "bts")
        file.rename(columns={tempCol: tempCol.replace("bolt", "bt")}, inplace=True)
        tempCol = tempCol.replace("bolt", "bt")
        file.rename(columns={tempCol: tempCol.replace("structural", "strc")}, inplace=True)
        tempCol = tempCol.replace("structural", "strc")
        # file.rename(columns={tempCol: tempCol.replace("studs", "stds")}, inplace=True)
        # tempCol = tempCol.replace("studs", "stds")
        file.rename(columns={tempCol: tempCol.replace("stud", "std")}, inplace=True)
        tempCol = tempCol.replace("stud", "std")
        file.rename(columns={tempCol: tempCol.replace("diameter", "di")}, inplace=True)
        tempCol = tempCol.replace("diameter", "di")
        file.rename(columns={tempCol: tempCol.replace("inches", "in")}, inplace=True)
        tempCol = tempCol.replace("inches", "in")
        file.rename(columns={tempCol: tempCol.replace("grout", "grt")}, inplace=True)
        tempCol = tempCol.replace("grout", "grt")
        # file.rename(columns={tempCol: tempCol.replace("pad", "pad")}, inplace=True)
        # tempCol = tempCol.replace("pad", "pad")
        file.rename(columns={tempCol: tempCol.replace("paved", "pvd")}, inplace=True)
        tempCol = tempCol.replace("paved", "pvd")
        file.rename(columns={tempCol: tempCol.replace("shoulder", "shld")}, inplace=True)
        tempCol = tempCol.replace("shoulder", "shld")
        file.rename(columns={tempCol: tempCol.replace("lane", "ln")}, inplace=True)
        tempCol = tempCol.replace("lane", "ln")
        file.rename(columns={tempCol: tempCol.replace("over", "ov")}, inplace=True)
        tempCol = tempCol.replace("over", "ov")
        file.rename(columns={tempCol: tempCol.replace("clearance", "clrn")}, inplace=True)
        tempCol = tempCol.replace("clearance", "clrn")
        file.rename(columns={tempCol: tempCol.replace("element", "elmt")}, inplace=True)
        tempCol = tempCol.replace("element", "elmt")
        file.rename(columns={tempCol: tempCol.replace("lowest", "lst")}, inplace=True)
        tempCol = tempCol.replace("lowest", "lst")
        file.rename(columns={tempCol: tempCol.replace("rating", "rtg")}, inplace=True)
        tempCol = tempCol.replace("rating", "rtg")
        file.rename(columns={tempCol: tempCol.replace("cover", "cvr")}, inplace=True)
        tempCol = tempCol.replace("cover", "cvr")
        file.rename(columns={tempCol: tempCol.replace("caption", "cap")}, inplace=True)
        tempCol = tempCol.replace("caption", "cap")
        file.rename(columns={tempCol: tempCol.replace("foundation", "fdn")}, inplace=True)
        tempCol = tempCol.replace("foundation", "fdn")

    # combine all the children files into a large CSV 
    if num > 0:
        if num == 1:
            previousFile = file
        if num > 1:
            previousFile = pd.concat([previousFile, file], ignore_index=True, sort=False)
            if num == 53:
                previousFile.insert(0, "File Names", listOfNames)
                previousFile.to_csv('childrenTable.csv')

    # create a nicely formatted HTML with selective page breaks
    num += 1
    test += f"<h2>{f1}</h2>"
    test += file.melt().to_html(index=False)
    if(num == 2 or num == 5 or num == 9 or num == 13 or num == 17 or num == 21 or num == 25 or num == 29 or num == 33 or num == 37 or num == 42 or num == 46 or num == 50):  #  num % 2 != 0 (num % 3 == 0) or (num == 0)
        test += f"<p style=\"page-break-before: always\">"
    

f.write(test)
css = 'main.css'
pdfkit.from_string(test, "Gfg2.pdf", css=css)
f.close()
